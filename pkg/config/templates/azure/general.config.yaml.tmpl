forkURLs:
  # KubeAid repository URL (in HTTPs syntax).
  # Defaults to Obmondo's KubeAid repository.
  kubeaid: https://github.com/Obmondo/KubeAid

  # Your KubeAid config repository URL (in HTTPs syntax).
  kubeaidConfig: https://github.com/xxxxxxxxxx/kubeaid-config

# Kubernetes cluster and control-plane specific configurations.
cluster:

  # Kubernetes cluster name.
  name: kubeaid-demo-azure

  # Kubernetes version to use.
  # NOTE : Make sure that the AMI you're using, is targetted towards this Kubernetes version.
  k8sVersion: v1.31.0

  # Kubeaid version to use.
  kubeaidVersion: {{ .KubeAidVersion }}

  # Kubernetes API server specific configurations.
  # REFER : https://github.com/kubernetes-sigs/cluster-api/blob/main/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml.
  #
  # NOTE : Generally, refer to the KubeadmControlPlane CRD instead of the corresponding GoLang
  #        source types linked below.
  #        There are some configuration options which appear in the corresponding GoLang source type,
  #        but not in the CRD. If you set those fields, then they get removed by the Kubeadm
  #        control-plane provider. This causes the capi-cluster ArgoCD App to always be in an
  #        OutOfSync state, resulting to the KubeAid Bootstrap Script not making any progress!
  # apiServer:
  #
  #   extraArgs: {}
  #
  #   # REFER : "sigs.k8s.io/cluster-api/bootstrap/kubeadm/api/v1beta1".HostPathMount
  #   #
  #   # NOTE : If you want a mount to be read-only, then set extraVolume.readOnly to true.
  #   #        Otherwise, omit setting that field. It gets removed by the Kubeadm control-plane
  #   #        provider component, which results to the capi-cluster ArgoCD App always being in
  #   #        OutOfSync state.
  #   extraVolumes: []
  #
  #   # REFER : "sigs.k8s.io/cluster-api/bootstrap/kubeadm/api/v1beta1".File
  #   files: []

  # Uncomment, if you just want audit-logging to work out of the box! KubeAid Bootstrap Script will
  # set necessary configuration options in cluster.apiServer.
  # enableAuditLogging: True

  # Any additional users you want to be setup for each Kubernetes node.
  # additionalUsers:
  #  - name: <username>
  #    sshPublicKey: xxxxxxxxxx

cloud:
  # Azure specific configurations.
  azure:
    tenantID: xxxxxxxxxx
    subscriptionID: xxxxxxxxxx

    aadApplication:
      # Object ID of the Service Principal corresponding to the AAD application you created,
      # while following the pre-requisites section in the provider guide.
      principalID: xxxxxxxxxx

    location: northcentralus

    # Storage account name.
    # It must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    #
    # KubeAid Bootstrap Script will create it, (if it doesn't already exist).
    #
    # For now, the same storage account is used to :
    #
    #   (1) host the OIDC provider which issues AAD tokens to pods in exchange of ServiceAccount
    #       tokens.
    #
    #   (2) store backups.
    storageAccount: kubeaiddemo

    workloadIdentity:
      # Details about the PEM type SSH KeyPair, to be used for Workload Identity setup.
      openIDProviderSSHKeyPair:
        publicKeyFilePath: ./outputs/ssh/rsa/pem/.pub
        privateKeyFilePath: ./outputs/ssh/rsa/pem/.key

    # Public key of the OpenSSH type SSH keypair, that'll be added to each VM.
    sshPublicKey: xxxxxxxxxx

    # Details about the machine image that'll be used for each VM.
    #
    # NOTE : We only support Ubuntu OS.
    canonicalUbuntuImage:
      sku: server-arm64
      offer: ubuntu-24_04-lts

    controlPlane:
      loadBalancerType: Public
      vmSize: Standard_D2ps_v6
      diskSizeGB: 128
      replicas: 1

    nodeGroups:
      - name: primary

        vmSize: Standard_D2ps_v6
        diskSizeGB: 128

        minSize: 1
        maxSize: 3

        # Label should meet one of the following criterias to propagate to Node :
        #
        # (1) Has node-role.kubernetes.io as prefix.
        # (2) Belongs to node-restriction.kubernetes.io domain.
        # (3) Belongs to node.cluster.x-k8s.io domain.
        #
        # REFER : https://cluster-api.sigs.k8s.io/developer/architecture/controllers/metadata-propagation#machine
        labels:
          node.cluster.x-k8s.io/nodegroup: bootstrapper
          node-role.kubernetes.io/bootstrapper: ""

        taints: []

  # A bucket corresponds to a Blob Container in the Azure Storage Account.
  #
  # KubeAid Bootstrap Script will create the corresponding Blob Container , if it doesn't already
  # exist.
  disasterRecovery:
    veleroBackupsBucketName: velero-backups
    sealedSecretsBackupsBucketName: sealed-secrets-backups

# monitoring:
#   kubePrometheusVersion: v0.14.0
