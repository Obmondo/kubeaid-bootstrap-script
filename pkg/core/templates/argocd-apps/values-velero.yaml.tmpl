LoadCustomCRDs: true
velero:

  {{- if .AWSConfig }}
  configuration:
    extraEnvVars:
      AWS_CLUSTER_NAME: {{ .ClusterConfig.Name }}
    backupStorageLocation:
      - name: default
        provider: aws
        bucket: {{ .AWSConfig.DisasterRecovery.VeleroBackupsBucketName }}
        config:
          region: {{ .AWSConfig.Region }}
    volumeSnapshotLocation:
      - name: default
        provider: aws
        config:
          region: {{ .AWSConfig.Region }}
    features: EnableCSI
  initContainers:
    - name: velero-velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.7.1
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
  podAnnotations:
    iam.amazonaws.com/role: arn:aws:iam::{{ .AWSAccountID }}:role/{{ .ClusterConfig.Name }}/velero-{{ .ClusterConfig.Name }}
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  {{- end }}

  {{- if .AzureConfig }}
  configuration:
    backupStorageLocation:
      - name: default
        provider: azure
        bucket: {{ .DisasterRecoveryConfig.VeleroBackupsBucketName }}
        config:
          useAAD: true
          resourceGroup: {{ .ClusterConfig.Name }}
          storageAccount: {{ .AzureConfig.StorageAccount }}
    volumeSnapshotLocation:
      - name: default
        provider: azure
        config:
          resourceGroup: {{ .ClusterConfig.Name }}
  serviceAccount:
    server:
      create: true
      name: velero
      annotations:
        azure.workload.identity/client-id: {{ (.DisasterRecoveryInfrastructureStatus).VeleroUAMIPrincipalID }}
  rbac:
    create: true
    clusterAdministrator: true
    clusterAdministratorName: cluster-admin
  credentials:
    secretContents:
      cloud: |
        AZURE_SUBSCRIPTION_ID={{ .AzureConfig.SubscriptionID }}
        AZURE_RESOURCE_GROUP={{ .ClusterConfig.Name }}
        AZURE_CLOUD_NAME=AzurePublicCloud
  initContainers:
    - name: velero-plugin-for-azure
      image: velero/velero-plugin-for-microsoft-azure:v1.10.1
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  podLabels:
    azure.workload.identity/use: "true"
  {{- end }}
