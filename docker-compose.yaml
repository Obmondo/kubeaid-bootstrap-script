networks:
  k3d:
    name: k3d-${MANAGEMENT_CLUSTER_NAME:-kubeaid-bootstrapper}
    external: false
    driver: bridge

services:
  config-generate:
    image: ghcr.io/obmondo/kubeaid-bootstrap-script:v0.12.1
    container_name: bootstrap-generate
    restart: no
    command:
      - bash
      - -c
      - |
        rm -fr outputs/configs
        kubeaid-bootstrap-script config generate ${CLOUD_PROVIDER:-local} ${FLAVOR:-''}
    volumes:
      - ./outputs:/outputs
    networks:
      - k3d

  bootstrap-cluster:
    image: ghcr.io/obmondo/kubeaid-bootstrap-script:v0.12.1
    restart: no
    command:
      - bash
      - -c
      - |
        mkdir -p /outputs
        if ${SKIP_PR:-false}; then
          kubeaid-bootstrap-script cluster bootstrap \
            --skip-pr-workflow \
            --management-cluster-name ${MANAGEMENT_CLUSTER_NAME:-kubeaid-bootstrapper} \
            ${CLOUD_PROVIDER:-local}
        else
          kubeaid-bootstrap-script cluster bootstrap \
            --management-cluster-name ${MANAGEMENT_CLUSTER_NAME:-kubeaid-bootstrapper} \
            ${CLOUD_PROVIDER:-local}
        fi
    environment:
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
    volumes:
      - ./outputs:/outputs
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}
    networks:
      - k3d
    stdin_open: true

  cleanup:
    image: ghcr.io/obmondo/kubeaid-bootstrap-script:v0.12.1
    restart: no
    command:
      - bash
      - -c
      - |
        k3d cluster delete ${MANAGEMENT_CLUSTER_NAME:-kubeaid-bootstrapper}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - k3d
